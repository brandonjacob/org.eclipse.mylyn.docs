pipeline {
	options {
		buildDiscarder(logRotator(numToKeepStr:'10'))
		disableConcurrentBuilds(abortPrevious: true)
		preserveStashes(buildCount: 50)
		skipStagesAfterUnstable()
		timeout(time: 40, unit: 'MINUTES')
		timestamps()
	}
	agent {
		label "centos-latest"
	}
	parameters {
		booleanParam(name: 'PERFORM_RELEASE', defaultValue: false, description: 'True: run all stages of the build, auto release the nexus repository, tag the release, and merge a commit to bump the development version. False: run all stages of the build but do not side-effect nexus or git repository.')
	}
	tools {
		maven 'apache-maven-3.8.6'
		jdk 'openjdk-jdk17-latest'
	}
	stages {
		stage('Initialize PGP') {
			steps {
				withCredentials([file(credentialsId: 'secret-subkeys.asc', variable: 'KEYRING')]) {
					sh '''
						gpg --batch --import "${KEYRING}"
						for fpr in $(gpg --list-keys --with-colons  | awk -F: \'/fpr:/ {print $10}\' | sort -u); 
						do 
							echo -e "5\ny\n" |  gpg --batch --command-fd 0 --expert --edit-key ${fpr} trust; 
						done
					'''
				}
			}
		}
		stage('Build and Deploy Maven Artifacts') {
			steps {
				withCredentials([string(credentialsId: 'gpg-passphrase', variable: 'KEYRING_PASSPHRASE')]) {
					wrap([$class: 'Xvnc', useXauthority: true]) {
						sh 'mvn clean install -U -B -V -e -s /home/jenkins/.m2/settings-deploy-ossrh-docs.xml -Psign -Possrh -Dmaven.repo.local=$WORKSPACE/.m2/repository -Dtycho.buildqualifier.format=yyyyMMddHHmm -Dmaven.test.failure.ignore=true -Dmaven.test.error.ignore=true -DskipTests=true -Ddash.fail=false -Dgpg.passphrase="${KEYRING_PASSPHRASE}"'
					}
				}
				dir("docs/org.eclipse.mylyn.docs-site/target/repository") {
					stash includes: '**', name: 'docsSite'

					sh '''#!/bin/bash
						ls -laR
					'''
				}
			}
		}
		stage('Deploy Update Site') {
			steps {
				dir("docs/org.eclipse.mylyn.docs-site/target/repository") {
					deleteDir()
					unstash 'docsSite'
					
					sh '''#!/bin/bash
					'''
				}
				sshagent (['projects-storage.eclipse.org-bot-ssh']) {
					sh '''#!/bin/bash
						
						RELEASE_VERSION="$(grep '\\s*<releaseVersion>.*</releaseVersion>' pom.xml | sed -e 's|\\s*<releaseVersion>\\([0-9]\\+\\.[0-9]\\+\\).*</releaseVersion>.*|\\1|')"
						RELEASE_VERSION_FULL="$(grep '\\s*<releaseVersion>.*</releaseVersion>' pom.xml | sed -e 's|\\s*<releaseVersion>\\(.*\\)</releaseVersion>.*|\\1|')"

						DOWNLOAD_AREA=/home/data/httpd/download.eclipse.org/mylyn/docs/releases/$RELEASE_VERSION
						echo "DOWNLOAD_AREA=$DOWNLOAD_AREA"

						DOWNLOAD_AREA_FULL=/home/data/httpd/download.eclipse.org/mylyn/docs/releases/$RELEASE_VERSION_FULL
						echo "DOWNLOAD_AREA_FULL=$DOWNLOAD_AREA_FULL"

						ls -laR docs/org.eclipse.mylyn.docs-site/target/repository
					'''
				}
			}
		}
	}
}
